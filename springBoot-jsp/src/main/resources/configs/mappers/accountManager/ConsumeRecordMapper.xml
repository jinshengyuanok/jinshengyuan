<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuan.dao.accountManager.ConsumeRecordMapper">

  <!--myAdd-->
  <resultMap id="selectResultMap" type="com.yuan.model.accountManager.ConsumeRecord">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_amount" jdbcType="INTEGER" property="goodsAmount" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="consume_type_code" jdbcType="CHAR" property="consumeTypeCode" />
    <result column="consume_type_name" jdbcType="VARCHAR" property="consumeTypeName" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_Name" jdbcType="VARCHAR" property="userName" />
    <result column="create_datetime" jdbcType="VARCHAR" property="createDatetime" />
  </resultMap>
  <!--根据条件查询-->
  <select id="selectByCondition" resultMap="selectResultMap" parameterType="map">
      select a.id,
              a.goods_name,
              a.goods_amount,
              a.goods_price,
              a.money,
              a.remark,
              a.consume_type_code,
              b.consume_type_name,
              a.user_id,
              c.user_name,
              date_format(a.consume_date,'%Y-%m-%d %H:%m:%s') create_datetime
       from tb_consume_record a
       left join com_consume_type b
         on a.consume_type_code = b.consume_type_code
       left join tb_user c
         on a.user_id = c.id
      where a.valid_flag = '1'
      order by a.consume_date desc,a.consume_type_code asc
  </select>

  <!--根据类型统计,返回LinkedHashMap-->
  <select id="countByConsumeType" resultType="java.util.LinkedHashMap">
      select  sum(a.money) value,
              b.consume_type_name name
        from tb_consume_record a
               left join com_consume_type b
                         on a.consume_type_code = b.consume_type_code
        group by b.consume_type_code
        order by b.consume_type_code
  </select>

  <!--根据年度统计-->
  <select id="countByYear"  parameterType="map" resultType="java.util.LinkedHashMap">
      select concat(date_format(t.consume_date, '%m'), '月') month, sum(t.money) money
        from tb_consume_record t
        where t.consume_date between date_sub(date_format(concat(#{year,jdbcType=VARCHAR}, '-01-01'), '%Y-%m-%d'), interval dayofyear(now()) - 1
                                              day) and concat(#{year,jdbcType=VARCHAR}, '-12-31')
        group by month
        order by month
  </select>

  <!--default-->

  <resultMap id="BaseResultMap" type="com.yuan.model.accountManager.ConsumeRecord">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_amount" jdbcType="INTEGER" property="goodsAmount" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="consume_type_code" jdbcType="CHAR" property="consumeTypeCode" />
    <result column="consume_date" jdbcType="TIMESTAMP" property="consumeDate" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="valid_flag" jdbcType="CHAR" property="validFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goods_name, goods_amount, goods_price, money, user_id, consume_type_code, consume_date, 
    remark, valid_flag
  </sql>
  <select id="selectByExample" parameterType="com.yuan.model.accountManager.ConsumeRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_consume_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_consume_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_consume_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yuan.model.accountManager.ConsumeRecordExample">
    delete from tb_consume_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yuan.model.accountManager.ConsumeRecord">
    insert into tb_consume_record (id, goods_name, goods_amount, 
      goods_price, money, user_id, 
      consume_type_code, consume_date, remark, 
      valid_flag)
    values (#{id,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, #{goodsAmount,jdbcType=INTEGER}, 
      #{goodsPrice,jdbcType=DECIMAL}, #{money,jdbcType=DECIMAL}, #{userId,jdbcType=VARCHAR}, 
      #{consumeTypeCode,jdbcType=CHAR}, #{consumeDate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{validFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yuan.model.accountManager.ConsumeRecord">
    insert into tb_consume_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsAmount != null">
        goods_amount,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="consumeTypeCode != null">
        consume_type_code,
      </if>
      <if test="consumeDate != null">
        consume_date,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="validFlag != null">
        valid_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsAmount != null">
        #{goodsAmount,jdbcType=INTEGER},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="consumeTypeCode != null">
        #{consumeTypeCode,jdbcType=CHAR},
      </if>
      <if test="consumeDate != null">
        #{consumeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="validFlag != null">
        #{validFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yuan.model.accountManager.ConsumeRecordExample" resultType="java.lang.Long">
    select count(*) from tb_consume_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_consume_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsAmount != null">
        goods_amount = #{record.goodsAmount,jdbcType=INTEGER},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.consumeTypeCode != null">
        consume_type_code = #{record.consumeTypeCode,jdbcType=CHAR},
      </if>
      <if test="record.consumeDate != null">
        consume_date = #{record.consumeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.validFlag != null">
        valid_flag = #{record.validFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_consume_record
    set id = #{record.id,jdbcType=VARCHAR},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_amount = #{record.goodsAmount,jdbcType=INTEGER},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      money = #{record.money,jdbcType=DECIMAL},
      user_id = #{record.userId,jdbcType=VARCHAR},
      consume_type_code = #{record.consumeTypeCode,jdbcType=CHAR},
      consume_date = #{record.consumeDate,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      valid_flag = #{record.validFlag,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yuan.model.accountManager.ConsumeRecord">
    update tb_consume_record
    <set>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsAmount != null">
        goods_amount = #{goodsAmount,jdbcType=INTEGER},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="consumeTypeCode != null">
        consume_type_code = #{consumeTypeCode,jdbcType=CHAR},
      </if>
      <if test="consumeDate != null">
        consume_date = #{consumeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="validFlag != null">
        valid_flag = #{validFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yuan.model.accountManager.ConsumeRecord">
    update tb_consume_record
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_amount = #{goodsAmount,jdbcType=INTEGER},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      money = #{money,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=VARCHAR},
      consume_type_code = #{consumeTypeCode,jdbcType=CHAR},
      consume_date = #{consumeDate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      valid_flag = #{validFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>